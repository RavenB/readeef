{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">
<link rel="import" href="/dist/core-toolbar/core-toolbar.html">
<link rel="import" href="/dist/core-menu/core-menu.html">
<link rel="import" href="/dist/core-header-panel/core-header-panel.html">
<link rel="import" href="/dist/core-drawer-panel/core-drawer-panel.html">
<link rel="import" href="/dist/core-icons/core-icons.html">
<link rel="import" href="/dist/core-icons/hardware-icons.html">

<link rel="import" href="/dist/paper-fab/paper-fab.html">
<link rel="import" href="/dist/paper-icon-button/paper-icon-button.html">
<link rel="import" href="/dist/paper-menu-button/paper-menu-button.html">

<polymer-element name="rf-scaffolding" attributes="wide user settings feed article display">
    <template>
        <style>
            core-toolbar {
                background-color: #558AE0;
                color: white;
            }
            core-drawer-panel:not(.wide) core-toolbar {
                height: 48px;
                font-size: 1.2em;
            }
            core-drawer-panel:not(.wide) core-toolbar /deep/ .toolbar-tools {
                height: 48px;
            }

            core-drawer-panel.wide #mainheader #navicon,
            core-drawer-panel.wide #mainheader #back-menu,
            core-drawer-panel.wide #mainheader #refresh-menu {
              display: none;
            }

            .title {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            .refreshButton {
                position: absolute;
                bottom: -28px;
                right: 24px;
                z-index: 1;
                background-color: #fcfcfc;
                color: #666464;
            }

            .content {
                background-color: #f8f8f8;
                overflow: hidden;
            }

            [drawer] /deep/ #mainContainer {
                background-color: #fff;
            }

            .wide .content {
                margin: 10px 120px 60px 5px;
                box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
                border-radius: 2px;
            }

            .content-label {
                line-height: 60px;
                padding: 0 24px 12px;
                background-color: #f8f8f8;
                letter-spacing: 0.05em;
                margin: 0;
                font-size: 24px;
                font-weight: 400;
                color: #5265a2;
            }

            .content-label small {
                display: block;
                margin-top: -10px;
                line-height: 14px;
                font-size: 12px;
            }

            .content-label .title-icon {
                line-height: 24px;
                margin-top: 10px;
            }

        </style>
        <template id="article-list-menu-items">
            <paper-item label="Older first" hidden?="{{ !settings.newerFirst }}" on-tap="{{ onOlderFirst }}"></paper-item>
            <paper-item label="Newer first" hidden?="{{ settings.newerFirst }}" on-tap="{{ onNewerFirst }}"></paper-item>
            <paper-item label="Unread only" hidden?="{{ settings.unreadOnly }}" on-tap="{{ onUnreadOnly }}"></paper-item>
            <paper-item label="Read and unread" hidden?="{{ !settings.unreadOnly }}" on-tap="{{ onReadAndUnread }}"></paper-item>
            <paper-item label="Mark all as read" on-tap="{{ onMarkAllAsRead }}"></paper-item>
        </template>
        <core-drawer-panel id="drawer-panel" class="{{ {wide: wide} | tokenList }}" responsiveWidth="768px">
            <core-header-panel drawer>
                <core-toolbar id="navheader">
                    <content select=".drawer-title"></content>
                </core-toolbar>
                <core-menu id="drawer-menu" selected="{{ feed.Id }}" notap>
                    <content select=".drawer-content"></content>
                </core-menu>
            </core-header-panel>

            <core-header-panel main mode="{{ {'cover': wide } | tokenList }}" shadow id="content-panel">
                <core-toolbar id="mainheader">
                    <paper-icon-button id="navicon" icon="menu" hidden?="{{ display != 'feed' || article }}"></paper-icon-button>
                    <paper-icon-button id="back-menu" icon="arrow-back" hidden?="{{ display == 'feed' && !article }}" on-tap="{{ onArticleBack }}"></paper-icon-button>
                    <div flex hidden?="{{ wide }}" class="title">{{ display == 'feed' ? feed.Title : 'Settings' }}</div>
                    <paper-icon-button id="previous-article-menu" icon="hardware:keyboard-arrow-left" hidden?="{{ display != 'feed' || !article || article.First }}" on-tap="{{ onArticlePrevious }}"></paper-icon-button>
                    <paper-icon-button id="next-article-title" icon="hardware:keyboard-arrow-right" hidden?="{{ display != 'feed' || !article || article.Last }}" on-tap="{{ onArticleNext }}"></paper-icon-button>
                    <paper-icon-button id="refresh-menu" icon="refresh" on-tap="{{ onRefresh }}" hidden?="{{ display != 'feed' || article }}"></paper-icon-button>

                    <paper-menu-button icon="more-vert" halign="right" hidden?="{{ display != 'feed' || article }}">
                        <template bind ref="article-list-menu-items"></template>
                    </paper-menu-button>

                    <paper-fab class="refreshButton bottom" icon="refresh" hidden?="{{ display != 'feed' || !wide }}" on-tap="{{ onRefresh }}"></paper-fab>
                </core-toolbar>
                <div class="content">
                    <h1 class="content-label" hidden?="{{ !wide }}" layout horizontal>
                        <paper-icon-button id="back-title" icon="arrow-back" class="title-icon" style="opacity: {{ display != 'feed' || article ? 100 : 0 }}" on-tap="{{ onArticleBack }}"></paper-icon-button>
                        <div flex layout vertical>
                            <template if="{{ display == 'feed' && feed.SiteLink }}">
                                <a href="{{ feed.SiteLink }}" target="feed-homepage">
                                    {{ feed.Title }}
                                </a>
                            </template>
                            <template if="{{ display != 'feed' || !feed.SiteLink }}">
                                {{ display == 'feed' ? feed.Title : 'Settings' }}
                            </template>
                            <template if="{{ display == 'feed' && feed.Description }}">
                                <br><small>{{ feed.Description }}</small>
                            </template>
                        </div>
                        <paper-icon-button id="previous-article-title" icon="hardware:keyboard-arrow-left" class="title-icon" style="opacity: {{ article && !article.First ? 100 : 0 }}" on-tap="{{ onArticlePrevious }}" hidden?="{{ display != 'feed' }}"></paper-icon-button>
                        <paper-icon-button id="next-article-title" icon="hardware:keyboard-arrow-right" class="title-icon" style="opacity: {{ article && !article.Last ? 100 : 0 }}" on-tap="{{ onArticleNext }}" hidden?="{{ display != 'feed' }}"></paper-icon-button>
                        <paper-menu-button icon="more-vert" halign="right" hidden?="{{ display != 'feed' || article }}" class="title-icon">
                            <template bind ref="article-list-menu-items"></template>
                        </paper-menu-button>
                    </h1>
                    <content select=".main-content"></content>
                </div>
            </core-header-panel>

        </core-drawer-panel>
    </template>
    <script>
(function() {
    "use strict";

    Polymer('rf-scaffolding', {
        display: "feed",

        ready: function() {
            var drawerPanel = this.$['drawer-panel'];

            this.$.navicon.addEventListener('click', function() {
                drawerPanel.togglePanel();
            });

            this.$['drawer-menu'].addEventListener('tap', function() {
                drawerPanel.togglePanel();
            });
        },

        onRefresh: function() {
            this.fire('core-signal', {name: "rf-feed-refresh"});
        },

        onArticleBack: function(event) {
            event.stopPropagation();
            event.preventDefault();

            if (this.display == 'feed') {
                this.async(function() {
                    this.article = null;
                });
            } else {
                this.display = 'feed';
            }
        },

        onArticlePrevious: function() {
            this.fire('core-signal', {name: 'rf-previous-article'});
        },

        onArticleNext: function() {
            this.fire('core-signal', {name: 'rf-next-article'});
        },

        onOlderFirst: function() {
            var settings = Polymer.extend({}, this.settings);
            settings.newerFirst = false;
            this.settings = settings;
        },

        onNewerFirst: function() {
            var settings = Polymer.extend({}, this.settings);
            settings.newerFirst = true;
            this.settings = settings;
        },

        onUnreadOnly: function() {
            var settings = Polymer.extend({}, this.settings);
            settings.unreadOnly = true;
            this.settings = settings;
        },

        onReadAndUnread: function() {
            var settings = Polymer.extend({}, this.settings);
            settings.unreadOnly = false;
            this.settings = settings;
        },

        onMarkAllAsRead: function() {
            this.fire('core-signal', {name: 'rf-mark-all-as-read'});
        }
    });
})();
    </script>
</polymer-element>
{% end %}
