{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">
<link rel="import" href="/dist/core-list/core-list.html">
<link rel="import" href="/dist/core-animated-pages/core-animated-pages.html">
<link rel="import" href="/dist/core-signals/core-signals.html">

<polymer-element name="rf-content-list" attributes="wide user feed feeds article">
    <template bind="{{ wide as wide }}">
        <style>
            core-list {
                padding-top: 8px;
                overflow: hidden;
            }

            core-animated-pages > section[active] {
                position: relative;
            }

            .card {
                background-color: #fff;
                box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.16);
                border-radius: 3px;
                margin: 0 8px 8px;
                padding: 8px;
            }
            .article {
                height: 44px;
            }

            .article .title-wrapper {
                white-space: nowrap;
                text-overflow: ellipsis;
                overflow: hidden;
            }

            .title {
                font-size: 14px;
                line-height: 20px;
            }

            .article-detail .title {
                font-size: 16px;
                font-weight: bold;
            }

            .short-description {
                font-size: 10px;
                line-height: 20px;
                padding-left: 1em;
                font-weight: 200;
            }

            .feed-origin {
                font-size: 8px;
                line-height: 20px;
                font-weight: 200;
                padding-right: 1em;
                width: 80px;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }

            .article-content {
                padding: 16px 94px;
            }
            core-animated-pages:not(.wide) .article-content {
                padding: 8px;
            }
            .article-link {
                padding-top: 16px;
            }

            .article-description img, 
            .article-description object, 
            .article-description iframe {
                max-width: 100%;
            }

        </style>
        <core-animated-pages id="pages" class="{{ {wide: wide} | tokenList }}" selected="list" transitions="hero-transition">

            <section name="list">
                <core-list data="{{ articles }}" height="{{ itemHeight }}" id="articles-list" on-core-activate="{{ onArticleActivate }}">
                    <template>
                        <div class="article {{ {selected: selected, read: Read, favorite: Favorite} | tokenList }}" id="{{ Id }}">
                            <div class="card" layout vertical hero-id="article-card-{{ Id }}" hero?="{{ selected }}">
                                <div layout horizontal>
                                    <div class="feed-origin" title="{{ FeedOrigin }}" hidden?="{{ !FeedOrigin }}">{{ FeedOrigin }}</div>
                                    <span flex class="title-wrapper">
                                        <span class="title" title="{{ Title }}">{{ Title }}</span>
                                        <span class="short-description">{{ ShortDescription }}</span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </template>
                </core-list>
            </section>

            <section name="detail" hidden?="{{ !article }}">
                <div class="article-detail">
                    <div class="card" layout vertical hero-id="article-card-{{ article.Id }}" hero>
                        <div layout horizontal>
                            <div class="feed-origin" title="{{ article.FeedOrigin }}" hidden?="{{ !article.FeedOrigin }}">{{ article.FeedOrigin }}</div>
                            <span flex class="title-wrapper">
                                <span class="title" title="{{ article.Title }}">{{ article.Title }}</span>
                            </span>
                        </div>
                        <div class="article-content">
                            <div class="article-description"></div>

                            <a href="{{ article.Link }}" target="_blank" class="article-link">View the article</a>
                        </div>
                    </div>
                </div>
            </section>

        </core-animated-pages>
        <core-signals on-core-signal-next-article="{{ nextArticle }}"></core-signals>
        <core-signals on-core-signal-previous-article="{{ previousArticle }}"></core-signals>
    </template>
    <script>
(function() {
    "use strict";

    Polymer('rf-content-list', {
        itemHeight: 44,
        listHeight: 0,
        pathObserver: null,

        nextArticle: function() {
            if (this.article) {
                var index = this.articles.indexOf(this.article);

                if (index < this.articles.length - 1) {
                    this.article = this.articles[index + 1];
                }
            } else {
                this.article = this.articles[0];
            }
        },

        previousArticle: function() {
            if (this.article) {
                var index = this.articles.indexOf(this.article);

                if (index) {
                    this.article = this.articles[index - 1];
                }
            } else {
                this.article = this.articles[this.articles.length - 1];
            }
        },

        created: function() {
            this.articles = [];
        },

        domReady: function() {
            var contentPanel = document.querySelector('rf-app').$.scaffolding.$['content-panel'];

            this.$['articles-list'].scrollTarget = contentPanel;

            contentPanel.addEventListener('scroll', function(event) {
                if (!this.articles.length || this.$.pages.selected == "detail") {
                    return;
                }

                if (contentPanel.scroller.offsetHeight + contentPanel.scroller.scrollTop + 50 > contentPanel.scroller.scrollHeight) {
                    this.asyncFire('rf-request-articles');
                }
            }.bind(this));
        },

        feedChanged: function(oldValue, newValue) {
            this.listHeight = 0;

            this.article = null;

            var processArticles = (function processArticles() {
                if (this.feed.Articles && this.feed.Articles.length) {
                    var worker = new Worker('/js/content-articles-worker.js'),
                        data = {current: this.feed};

                    worker.addEventListener('message', function(event) {
                        this.articles = event.data.articles;
                    }.bind(this));
                    if (this.feed.Id == "__all__") {
                        data.feeds = this.feeds;
                    }
                    worker.postMessage(data);
                } else if (this.articles.length) {
                    this.articles = [];
                }
            }).bind(this);

            if (newValue) {
                processArticles();

                if (this.pathObserver) {
                    this.pathObserver.close();
                }

                this.pathObserver = new PathObserver(newValue, 'Articles');
                this.pathObserver.open(function(newValue) {
                    if (newValue.length == this.pathObserver._articleLength) {
                        return;
                    }

                    this.pathObserver._articleLength = newValue.length;
                    processArticles();
                }.bind(this));
            }
        },

        articleChanged: function(oldValue, newValue) {
            if (newValue) {
                this.$.pages.querySelector('.article-description').innerHTML = this.article.Description;

                this.$.pages.selected = 'detail';
            } else {
                this.$.pages.selected = 'list';
            }
        },

        onArticleActivate: function(event, detail) {
            this.article = detail.data;
        }

    });
})();
    </script>
</polymer-element>
{% end %}
