{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">
<link rel="import" href="/dist/paper-item/paper-item.html">
<link rel="import" href="/dist/core-overlay/core-overlay.html">
<link rel="import" href="/dist/core-animated-pages/core-animated-pages.html">
<link rel="import" href="/dist/core-animated-pages/transitions/slide-up.html">
<link rel="import" href="/dist/core-animated-pages/transitions/scale-up.html">
<link rel="import" href="/dist/core-animated-pages/transitions/tile-cascade.html">
<link rel="import" href="/dist/core-transition/core-transition-css.html">

<link rel="import" href="/component/rf-api">
<link rel="import" href="/component/rf-scaffolding">
<link rel="import" href="/component/rf-login">

<polymer-element name="rf-app" vertical layout attributes="{{ user userTTL }}">
    <template>
        <core-animated-pages selected="{{ selected }}" transitions="cross-fade cross-fade-delayed scale-up slide-up slide-up-offscreen slide-down tile-cascade hero-transition" fit>
            <core-overlay name="loading" opened?="{{ selected == 'loading' }}" style="background-color: #e2e2e2;" transition="core-transition-top">
            </core-overlay>

            <rf-scaffolding name="scaffolding" drawertitle="Menu" maintitle="Content title" cross-fade wide="{{ wide }}" user="{{ user }}">
                <div class="drawer-content">
                    <paper-item label="One"></paper-item>
                    <paper-item label="Two"></paper-item>
                </div>
                <div class="main-content">
                    <h1>Content be here!</h1>
                </div>
                <div class="menu-content">
                    <paper-item label="Settings"></paper-item>
                    <paper-item label="Sign Out"></paper-item>
                </div>
            </rf-scaffolding>

            <rf-login name="login" id="login" layout wide="{{ wide }}" user="{{ user }}"></rf-login>
        </core-animated-pages>
        <core-media-query query="min-width: {{responsiveWidth}}" queryMatches="{{wide}}"></core-media-query>
        <rf-api user="{{ user }}" id="authCheck" pathAction="auth" on-core-complete="{{ onAuthCheckComplete }}"></rf-api>
    </template>
    <script>
(function() {
    Polymer('rf-app', {
        selected: 'loading',
        responsiveWidth: '768px',
        userTTL: 1000 * 60 * 60 * 24 * 15,
        user: null,

        userChanged: function(oldValue, newValue) {
            if (!newValue) {
                this.selected = 'login';
            } else {
                if ((!oldValue && newValue) || (oldValue && !newValue)
                        || oldValue.login != newValue.login
                        || oldValue.md5api != newValue.md5api) {
                    this.$.authCheck.go();
                }
            }
        },

        domReady: function() {
            var user;
            try {
                user = JSON.parse(localStorage.getItem('user'));
            } catch (e) {}
            
            if (user && user.md5api && user.authTime && (
                new Date().getTime() - user.authTime <= this.userTTL)) {

                this.user = user;
            } else {
                localStorage.removeItem('user');
                this.selected = 'login';
            }
        },

        onAuthCheckComplete: function(event, response) {
            if (response.response == 403) {
                localStorage.removeItem('user');
                if (this.selected == 'login') {
                    this.$.login.invalid = true;
                } else {
                    this.selected = 'login';
                }
            } else if (response.response == 200) {
                var user = this.$.authCheck.user;
                user.authTime = new Date().getTime();

                localStorage.setItem("user", JSON.stringify(this.$.authCheck.user));
                if (this.selected == 'login' || this.selected == 'loading') {
                    this.selected = 'scaffolding';
                }

                this.user = user;
            }
        }
    });
})();
    </script>
</polymer-element>
{% end %}
