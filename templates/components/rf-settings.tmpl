{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">
<link rel="import" href="/dist/core-animated-pages/core-animated-pages.html">
<link rel="import" href="/dist/core-animated-pages/transitions/slide-from-right.html">

<link rel="import" href="/dist/paper-button/paper-button.html">
<link rel="import" href="/dist/paper-icon-button/paper-icon-button.html">
<link rel="import" href="/dist/paper-checkbox/paper-checkbox.html">
<link rel="import" href="/dist/paper-fab/paper-fab.html">
<link rel="import" href="/dist/paper-input/paper-input.html">
<link rel="import" href="/dist/paper-dropdown-menu/paper-dropdown-menu.html">
<link rel="import" href="/dist/paper-dialog/paper-dialog.html">
<link rel="import" href="/dist/paper-dialog/paper-dialog-transition.html">
<link rel="import" href="/dist/paper-toast/paper-toast.html">

<link rel="import" href="/dist/loading-wave/loading-wave.html">

<link rel="import" href="/component/rf-api">

<polymer-element name="rf-settings" attributes="wide user settings feeds display" layout horizontal center-justified>
    <template>
        <link href="/css/rf-settings.css" rel="stylesheet">

        <div layout vertical flex start>
            <paper-dropdown-menu id="dropdown" selected="{{ selectedTab }}">
                <paper-item name="general" label="General"></paper-item>
                <paper-item name="add-feed" label="Add Feed"></paper-item>
                <paper-item name="feeds" label="Manage Feeds"></paper-item>
                <template if="{{ user.Admin }}">
                    <paper-item name="admin" label="Admin"></paper-item>
                </template>
            </paper-dropdown-menu>
            <core-animated-pages id="pages" class="{{ {wide: wide} | tokenList }}" selected="{{ selectedTab }}" transitions="hero-transition">

                <section name="general" layout vertical center>
                    <div class="container" slide-from-left>
                        <div class="card" hero-id="card" hero layout vertical>
                            <p>
                                Personalize your feed reader
                            </p>
                            <paper-input label="First name" id="first-name" value="{{ user.FirstName }}" floatingLabel tabindex="1"></paper-input>
                            <paper-input label="Last name" id="last-name" value="{{ user.LastName }}" floatingLabel tabindex="2"></paper-input>
                            <paper-input label="Email" id="email" type="email" value="{{ user.Email }}" floatingLabel tabindex="3"></paper-input>
                            <p>
                                Pick your style
                            </p>
                            <div class="theme-bubbles" layout horizontal justified>
                                <template repeat="{{ color in ['blue', 'lightBlue', 'indigo', 'green'] }}">
                                    <paper-icon-button class="theme {{ color }}" on-tap="{{ onThemeSelect }}"></paper-icon-button>
                                </template>
                            </div>
                            <div class="theme-bubbles" layout horizontal justified>
                                <template repeat="{{ color in ['lightGreen', 'lime', 'red', 'pink'] }}">
                                    <paper-icon-button class="theme {{ color }}" on-tap="{{ onThemeSelect }}"></paper-icon-button>
                                </template>
                            </div>
                            <div class="theme-bubbles" layout horizontal justified>
                                <template repeat="{{ color in ['purple', 'amber', 'deepOrange', 'grey'] }}">
                                    <paper-icon-button class="theme {{ color }}" on-tap="{{ onThemeSelect }}"></paper-icon-button>
                                </template>
                            </div>

                            <paper-button label="Change password" on-tap="{{ onChangePassword }}" self-end></paper-button>
                        </div>
                    </div>
                </section>

                <section name="add-feed" layout vertical center>
                    <div class="container" slide-from-left>
                        <div class="card" hero-id="card" hero layout vertical>
                            <template if="{{ !discoveredFeeds }}">
                                <p>
                                    Enter the address of a feed, or a website that might contain one or more feeds.
                                </p>

                                <paper-input label="URL" id="feed-url" value="{{ url }}" on-keypress="{{ onAddFeedUrlKeypress }}" floatingLabel tabindex="1" data-error-no-feed="No feeds were found" data-error-no-absolute="The value is not a valid absolute URL" data-error-internal="There was an error processing the request"></paper-input>

                                <p>
                                    Alternatively, you may provide an OPML file that contains a list of feeds.
                                </p>

                                <input type="file" id="opml" name="opml" accept=".opml" tabindex="2">
                            </template>
                            <template if="{{ discoveredFeeds && !discoveredFeeds.length }}">
                                <p>No feeds found for '{{url}}'</p>
                            </template>
                            <template if="{{ discoveredFeeds && discoveredFeeds.length }}">
                                <p>Found the following feeds for '{{url}}':</p>
                                <ul>
                                <template repeat="{{ feed in discoveredFeeds }}">
                                    <li layout horizontal center>
                                        <paper-checkbox checked="{{ feed.selected }}"></paper-checkbox>
                                        <a href="{{ feed.Link }}">{{ feed.Title }}<br><small>{{ feed.Description}}</small></a>
                                    </li>
                                </template>
                                </ul>
                            </template>
                            <template if="{{ loading }}">
                                <loading-wave background="transparent" self-center></loading-wave>
                            </template>

                            <div layout horizontal end-justified>
                                <paper-button label="Find" on-tap="{{ onFindFeed }}" id="find-feeds" autofocus hidden?="{{ discoveredFeeds }}"></paper-button>
                                <paper-button label="Add" on-tap="{{ onAddFeed }}" id="add-feeds" autofocus hidden?="{{ !discoveredFeeds || !discoveredFeeds.length }}"></paper-button>
                            </div>
                        </div>
                    </div>
                </section>

                <section name="feeds" layout vertical center>
                    <div class="container" slide-from-left>
                        <div class="card" hero-id="card" hero layout vertical>
                            <ul cross-fade>
                                <template repeat="{{ feed in feeds }}">
                                <li title="{{ feed.Title }}" layout vertical>
                                    <template if="{{ wide }}">
                                    <div layout horizontal center>
                                        <img src="http://www.google.com/s2/favicons?domain={{ feed.Link | domain }}" alt="favicon" class="feed-favicon">
                                        <span flex style="padding-right: 10px" layout horizontal>
                                            {{ feed.Title }}
                                            <template if="{{ user.Admin && (feed.UpdateError || feed.SubscribeError) }}">
                                                <paper-icon-button icon="warning" on-tap="{{ onDisplayFeedErrors }}"></paper-icon-button>
                                                <paper-toast text="{{ feed.UpdateError + '\n' + feed.SubscribeError }}"></paper-toast>
                                            </template>
                                        </span>
                                        <paper-input value="{{ feed.Tags }}" on-change="{{ onFeedTagsChange }}" placeholder="Comma-separated tag list"></paper-input>
                                        <paper-icon-button icon="remove" on-tap="{{ onRemoveFeed }}"></paper-icon-button>
                                    </div>
                                    </template>
                                    <template if="{{ !wide }}">
                                    <div layout horizontal center>
                                        <img src="http://www.google.com/s2/favicons?domain={{ feed.Link | domain }}" alt="favicon" class="feed-favicon">
                                        <span flex>{{ feed.Title }}</span>
                                    </div>
                                    <div layout horizontal center>
                                        <paper-input value="{{ feed.Tags }}" on-change="{{ onFeedTagsChange }}" flex placeholder="Comma-separated tag list"></paper-input>
                                        <paper-icon-button icon="remove" on-tap="{{ onRemoveFeed }}"></paper-icon-button>
                                    </div>
                                    </template>
                                </li>
                                </template>
                            </ul>
                        </div>
                    </div>
                </section>

                <template if="{{ user.Admin }}">
                    <section name="admin" layout vertical center>
                        <div class="container" slide-from-left>
                            <div class="card" hero-id="card" hero layout vertical>
                                <template if="{{ users.length }}">
                                <ul cross-fade>
                                    <template repeat="{{ user in users }}">
                                    <li title="{{ user.FirstName || user.Login }} {{ user.LastName}}" layout horizontal center>
                                        <paper-checkbox checked="{{ user.Active }}" on-change="{{ onToggleActiveUser}}"></paper-checkbox>
                                        <span flex>{{ user.FirstName || user.Login }} {{ user.LastName }}</span>
                                        <paper-icon-button icon="remove" on-tap="{{ onRemoveUser }}"></paper-icon-button>
                                    </li>
                                    </template>
                                </ul>
                                </template>

                                <template if="{{ !users.length }}">
                                <h3>There are no other users</h3>
                                </template>

                                <paper-button label="Create user" on-tap="{{ onCreateUser }}" self-end></paper-button>

                            </div>
                        </div>
                    </section>
                </template>

            </core-animated-pages>
        </div>

        <paper-dialog id="set-password-dialog" heading="Change your password" transition="paper-dialog-transition-bottom" closeSelector="[dismissive],[affirmative]:not([transient])" on-core-overlay-open="{{ cleanFields }}" on-keypress="{{ onPasswordDialogKeypress }}">
            <small>A successfull change will force a re-log</small>
            <paper-input label="Current password" id="password" type="password" floatingLabel tabindex="4"></paper-input>
            <paper-input label="New password" id="new-password" type="password" floatingLabel tabindex="5"></paper-input>
            <paper-input label="Confirm new password" id="confirm-new-password" type="password" floatingLabel tabindex="6"></paper-input>

            <paper-button label="Cancel" affirmative></paper-button>
            <paper-button label="Apply" id="apply-password-change" on-tap="{{ onApplyPasswordChange }}" affirmative autofocus transient></paper-button>
        </paper-dialog>

        <paper-dialog id="add-user-dialog" heading="Add a new user" transition="paper-dialog-transition-bottom" closeSelector="[dismissive],[affirmative]:not([transient])" on-core-overlay-open="{{ cleanFields }}" on-keypress="{{ onNewUserDialogKeypress }}">
            <paper-input label="Login" id="add-user-login" floatingLabel tabindex="7"></paper-input>
            <paper-input label="Password" id="add-user-password" type="password" floatingLabel tabindex="8"></paper-input>

            <paper-button label="Cancel" affirmative></paper-button>
            <paper-button label="Apply" id="add-user-apply" on-tap="{{ onApplyCreateUser }}" affirmative autofocus transient></paper-button>
        </paper-dialog>

        <rf-api user="{{ user }}" id="remove-feed" method="post" pathAction="feed/remove/{{ removedFeed }}" on-rf-api-response="{{ onRemoveFeedResponse }}"></rf-api>

        <rf-api user="{{ user }}" id="discover-feed" pathAction="feed/discover" on-rf-api-response="{{ onDiscoverFeedResponse }}" on-rf-api-error="{{ onDiscoverFeedError }}"></rf-api>
        <rf-api user="{{ user }}" id="discover-opml" pathAction="feed/opml" method="post" on-rf-api-response="{{ onDiscoverFeedResponse }}" on-rf-api-error="{{ onDiscoverFeedError }}"></rf-api>
        <rf-api user="{{ user }}" id="add-feed" method="post" pathAction="feed/add" on-rf-api-response="{{ onAddFeedResponse }}"></rf-api>
        <rf-api user="{{ user }}" id="feed-tags" method="post" pathAction="feed/tags/{{ taggedFeed }}" on-rf-api-response="{{ onFeedTagsResponse }}"></rf-api>
        <rf-api id="password-change" pathAction="user-settings/password" on-rf-api-response="{{ onPasswordChangeResponse }}" user="{{ user }}" method="post"></rf-api>

        <rf-api user="{{ user }}" id="user-list" pathAction="user/list" on-rf-api-response="{{ onUserListResponse }}"></rf-api>
        <rf-api user="{{ user }}" id="user-add" pathAction="user/add/{{ addedUser }}" method="post" on-rf-api-response="{{ onUserAddResponse }}"></rf-api>
        <rf-api user="{{ user }}" id="user-remove" pathAction="user/remove/{{ removedUser }}" method="post" on-rf-api-response="{{ onUserRemoveResponse }}"></rf-api>
        <rf-api user="{{ user }}" id="user-toggle-active" pathAction="user/active/{{ toggleActiveUser }}/{{ toggleActiveUserState }}" method="post" on-rf-api-response="{{ onUserToggleActiveResponse }}"></rf-api>
        
    </template>

    <script src="/js/rf-settings.js"></script>
</polymer-element>
{% end %}
