{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">
<link rel="import" href="/dist/core-animated-pages/core-animated-pages.html">
<link rel="import" href="/dist/core-animated-pages/transitions/slide-from-right.html">

<link rel="import" href="/dist/paper-button/paper-button.html">
<link rel="import" href="/dist/paper-checkbox/paper-checkbox.html">
<link rel="import" href="/dist/paper-fab/paper-fab.html">
<link rel="import" href="/dist/paper-input/paper-input.html">
<link rel="import" href="/dist/paper-tabs/paper-tabs.html">

<link rel="import" href="/dist/loading-wave/loading-wave.html">

<link rel="import" href="/component/rf-api">

<polymer-element name="rf-settings" attributes="wide user settings feeds display" layout horizontal center-justified>
    <template>
        <style>
            core-animated-pages > section[active] {
                position: relative;
            }

            .card {
                background-color: #fff;
                box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.16);
                border-radius: 3px;
                margin: 24px;
                padding: 8px;
                max-width: 1024px;
            }

            #save {
                background: #259b24;
            }

            li {
                padding: 8px;
                list-style: none;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
            li paper-checkbox {
                margin-right: 8px;
            }
        </style>
        <div layout vertical flex>
            <paper-tabs id="tabs" selected="{{ selectedTab }}">
                <paper-tab name="general">General</paper-tab>
                <paper-tab name="feeds">Manage Feeds</paper-tab>
                <paper-tab name="add-feed">Add Feed</paper-tab>
                <template if="{{ user.Admin }}">
                    <paper-tab name="admin">Admin</paper-tab>
                </template>
            </paper-tabs>
            <core-animated-pages id="pages" class="{{ {wide: wide} | tokenList }}" selected="{{ selectedTab }}" transitions="hero-transition slide-from-right">
                <section name="general" layout vertical center>
                    <div class="container" slide-from-right>
                        <div class="card" hero-id="setting-card" hero2>General</div>
                    </div>
                </section>
                <section name="feeds" layout vertical center>
                    <div class="container" slide-from-right>
                        <div class="card" hero-id="setting-card" hero2>Manage feeds</div>
                    </div>
                </section>
                <section name="add-feed" layout vertical center>
                    <div class="container" slide-from-right>
                        <div class="card" hero-id="setting-card" hero layout vertical>
                            <template if="{{ !discoveredFeeds }}">
                                <p>
                                    Enter the address of a feed, or a website that might contain one or more feeds.
                                </p>

                                <paper-input label="URL" id="feed-url" value="{{ url }}" on-keypress="{{ onAddFeedUrlKeypress }}" floatingLabel tabindex="1"></paper-input>

                                <p>
                                    Alternatively, you may provide an OPML file that contains a list of feeds.
                                </p>

                                <input type="file" id="opml" name="opml" accept=".opml" tabindex="2">
                            </template>
                            <template if="{{ discoveredFeeds && !discoveredFeeds.length }}">
                                <p>No feeds found for '{{url}}'</p>
                            </template>
                            <template if="{{ discoveredFeeds && discoveredFeeds.length }}">
                                <p>Found the following feeds for '{{url}}':</p>
                                <ul>
                                <template repeat="{{ feed in discoveredFeeds }}">
                                    <li>
                                        <paper-checkbox checked="{{ feed.selected }}"></paper-checkbox>
                                        <a href="{{ feed.Link }}">{{ feed.Title }}: {{ feed.Description}}</a>
                                    </li>
                                </template>
                                </ul>
                            </template>
                            <template if="{{ loading }}">
                                <loading-wave self-center></loading-wave>
                            </template>

                            <div layout horizontal end-justified>
                                <paper-button label="Find" on-tap="{{ onFindFeed }}" id="find-feeds" autofocus hidden?="{{ discoveredFeeds }}"></paper-button>
                                <paper-button label="Add" on-tap="{{ onAddFeed }}" id="add-feeds" autofocus hidden?="{{ !discoveredFeeds || !discoveredFeeds.length }}"></paper-button>
                            </div>
                        </div>
                    </div>
                </section>
                <template if="{{ user.Admin }}">
                    <section name="admin" layout vertical center>
                        <div class="container" slide-from-right>
                            <div class="card" hero-id="setting-card" hero2>Admin</div>
                        </div>
                    </section>
                </template>
            </core-animated-pages>
        </div>
        <rf-api user="{{ user }}" id="discover-feed" pathAction="feed/discover" on-rf-api-response="{{ onDiscoverFeedResponse }}"></rf-api>
        <rf-api user="{{ user }}" id="discover-opml" pathAction="feed/opml" method="post" on-rf-api-response="{{ onDiscoverFeedResponse }}"></rf-api>
        <rf-api user="{{ user }}" id="add-feed" method="post" pathAction="feed/add" on-rf-api-response="{{ onAddFeedResponse }}"></rf-api>
        
    </template>
    <script>
(function() {
    "use strict";

    Polymer('rf-settings', {
        selectedTab: 'general',
        loading: false,

        attached: function() {
            this.cleanFields();
        },

        displayChanged: function(oldValue, newValue) {
            if (newValue != 'settings') {
                this.cleanFields();
            }
        },

        onAddFeedUrlKeypress: function(event, detail, sender) {
            var code = event.keyCode || event.charCode, key = event.keyIdentifier;

            if (key == 'Enter' || code == 13) {
                sender.blur();

                if (!this.url) {
                    this.$['feed-url'].required = true;
                    return;
                }

                this.$['find-feeds'].asyncFire('tap');
            }
        },

        onFindFeed: function() {
            if (this.$.opml.files.length) {
                var file = this.$.opml.files[0], fileReader = new FileReader();

                fileReader.onload = function(event) {
                    var contents = event.target.result;

                    this.$['discover-opml'].body = contents;
                    this.$['discover-opml'].contentType = file.type;

                    this.$['discover-opml'].go();
                }.bind(this);

                fileReader.readAsText(file);
            } else {
                if (!this.url) {
                    return;
                }

                this.$['discover-feed'].params = JSON.stringify({"url": this.url});
                this.$['discover-feed'].go();
            }
            this.loading = true;
        },

        onAddFeed: function() {
            var params = {url: []};
            for (var i = 0, f; f = this.discoveredFeeds[i]; ++i) {
                if (f.selected) {
                    params.url.push(f.Link);
                }
            }

            if (!params.url.length) {
                /* TODO: show that nothing was selected */
                return;
            }

            this.$['add-feed'].params = JSON.stringify(params)
            this.$['add-feed'].go();
            this.loading = true;
        },

        onDiscoverFeedResponse: function(event, data) {
            if (data.response) {
                data.response.Feeds.forEach(function(f) {
                    f.selected = true;
                });
                this.discoveredFeeds = data.response.Feeds;
            } else {
                this.discoveredFeeds = [];
            }
            this.loading = false;
        },

        onAddFeedResponse: function(event, data) {
            if (data.response && data.response.Success) {
                this.fire('core-signal', {name: 'rf-feeds-added'});
            }

            this.cleanFields();
        },

        cleanFields: function() {
            this.url = "";
            this.discoveredFeeds = null;
            this.loading = false;
        }
    });
})();
    </script>
</polymer-element>
{% end %}
