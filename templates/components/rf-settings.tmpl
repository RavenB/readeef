{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">
<link rel="import" href="/dist/core-animated-pages/core-animated-pages.html">
<link rel="import" href="/dist/core-input/core-input.html">
<link rel="import" href="/dist/core-menu/core-menu.html">

<link rel="import" href="/dist/paper-button/paper-button.html">
<link rel="import" href="/dist/paper-checkbox/paper-checkbox.html">
<link rel="import" href="/dist/paper-dialog/paper-dialog-transition.html">
<link rel="import" href="/dist/paper-dialog/paper-action-dialog.html">
<link rel="import" href="/dist/paper-dropdown-menu/paper-dropdown-menu.html">
<link rel="import" href="/dist/paper-dropdown/paper-dropdown.html">
<link rel="import" href="/dist/paper-fab/paper-fab.html">
<link rel="import" href="/dist/paper-icon-button/paper-icon-button.html">
<link rel="import" href="/dist/paper-input/paper-input-decorator.html">
<link rel="import" href="/dist/paper-toast/paper-toast.html">
<link rel="import" href="/dist/paper-toggle-button/paper-toggle-button.html">

<link rel="import" href="/dist/loading-wave/loading-wave.html">

<link rel="import" href="/component/rf-api">

<polymer-element name="rf-settings" attributes="wide user settings feeds display shareServices settingsTab" layout horizontal center-justified>
    <template>
        <link href="/css/rf-settings.css" rel="stylesheet">

        <div layout vertical flex start>
            <paper-dropdown-menu>
                <paper-dropdown class="dropdown">
                    <core-menu selected="{{ settingsTab }}">
                        <paper-item name="general" >General</paper-item>
                        <paper-item name="add-feed" >Add Feed</paper-item>
                        <paper-item name="feeds" >Manage Feeds</paper-item>
                        <paper-item name="share-services" >Share services</paper-item>

                        <template if="{{ user.Admin }}">
                            <paper-item name="admin" >Admin</paper-item>
                        </template>
                    </core-menu>
                </paper-dropdown>
            </paper-dropdown-menu>
            <core-animated-pages id="pages" class="{{ {wide: wide} | tokenList }}" selected="{{ settingsTab }}" transitions="hero-transition">

                <section name="general" layout vertical center>
                    <div class="container">
                        <div class="card" hero-id="card" hero layout vertical>
                            <p>
                                Personalize your feed reader
                            </p>
                            <paper-input-decorator label="First name" floatingLabel>
                                <input is="core-input" id="first-name" value="{{ user.FirstName }}" tabindex="1">
                            </paper-input-decorator>

                            <paper-input-decorator label="Last name" floatingLabel>
                                <input is="core-input" id="last-name" value="{{ user.LastName }}" tabindex="2">
                            </paper-input-decorator>

                            <paper-input-decorator label="Email" floatingLabel>
                                <input is="core-input" id="email" type="email" value="{{ user.Email }}" tabindex="3">
                            </paper-input-decorator>
                            <p>
                                Pick your style
                            </p>
                            <div class="theme-bubbles" layout horizontal justified>
                                <template repeat="{{ color in ['blue', 'lightBlue', 'indigo', 'green'] }}">
                                    <paper-icon-button class="theme {{ color }}" on-tap="{{ onThemeSelect }}"></paper-icon-button>
                                </template>
                            </div>
                            <div class="theme-bubbles" layout horizontal justified>
                                <template repeat="{{ color in ['lightGreen', 'lime', 'red', 'pink'] }}">
                                    <paper-icon-button class="theme {{ color }}" on-tap="{{ onThemeSelect }}"></paper-icon-button>
                                </template>
                            </div>
                            <div class="theme-bubbles" layout horizontal justified>
                                <template repeat="{{ color in ['purple', 'amber', 'deepOrange', 'grey'] }}">
                                    <paper-icon-button class="theme {{ color }}" on-tap="{{ onThemeSelect }}"></paper-icon-button>
                                </template>
                            </div>

                            <paper-button on-tap="{{ onChangePassword }}" self-end>Change password</paper-button>
                        </div>
                    </div>
                </section>

                <section name="add-feed" layout vertical center>
                    <div class="container">
                        <div class="card" hero-id="card" hero layout vertical>
                            <template if="{{ !discoveredFeeds }}">
                                <p>
                                    Enter the address of a feed, or a website that might contain one or more feeds.
                                </p>

                                <paper-input-decorator label="URL" floatingLabel>
                                    <input is="core-input" id="feed-url" value="{{ url }}" on-keypress="{{ onAddFeedUrlKeypress }}" tabindex="1" data-error-no-feed="{% __ "No feeds were found" .base.lang %}" data-error-no-absolute="{% __ "The value is not a valid absolute URL" .base.lang %}" data-error-internal="{% __ "There was an error processing the request" .base.lang %}">
                                </paper-input-decorator>

                                <p>
                                    Alternatively, you may provide an OPML file that contains a list of feeds.
                                </p>

                                <input type="file" id="opml" name="opml" accept=".opml" tabindex="2">
                            </template>
                            <template if="{{ discoveredFeeds && !discoveredFeeds.length }}">
                                <p>No feeds found for '{{url}}'</p>
                            </template>
                            <template if="{{ discoveredFeeds && discoveredFeeds.length }}">
                                <p>Found the following feeds for '{{url}}':</p>
                                <ul>
                                <template repeat="{{ feed in discoveredFeeds }}">
                                    <li layout horizontal center>
                                        <paper-checkbox checked="{{ feed.selected }}"></paper-checkbox>
                                        <a href="{{ feed.Link }}">{{ feed.Title }}<br><small>{{ feed.Description}}</small></a>
                                    </li>
                                </template>
                                </ul>
                            </template>
                            <template if="{{ loading }}">
                                <loading-wave background="transparent" self-center></loading-wave>
                            </template>

                            <div layout horizontal end-justified>
                                <paper-button on-tap="{{ onFindFeed }}" id="find-feeds" autofocus hidden?="{{ discoveredFeeds }}">Find</paper-button>
                                <paper-button on-tap="{{ onAddFeed }}" id="add-feeds" autofocus hidden?="{{ !discoveredFeeds || !discoveredFeeds.length }}">Add</paper-button>
                            </div>
                        </div>
                    </div>
                </section>

                <section name="feeds" layout vertical center>
                    <div class="container">
                        <div class="card" hero-id="card" hero layout vertical>
                            <ul cross-fade>
                                <template repeat="{{ feed in feeds }}">
                                <li title="{{ feed.Title }}" layout vertical>
                                    <template if="{{ wide }}">
                                    <div layout horizontal center>
                                        <img src="http://www.google.com/s2/favicons?domain={{ feed.Link | domain }}" alt="favicon" class="feed-favicon">
                                        <span flex style="padding-right: 10px" layout horizontal>
                                            {{ feed.Title }}
                                            <template if="{{ user.Admin && (feed.UpdateError || feed.SubscribeError) }}">
                                                <paper-icon-button icon="warning" on-tap="{{ onDisplayFeedErrors }}"></paper-icon-button>
                                                <paper-toast text="{{ feed.UpdateError + '\n' + feed.SubscribeError }}"></paper-toast>
                                            </template>
                                        </span>
                                        <input is="core-input" value="{{ feed.Tags }}" on-change="{{ onFeedTagsChange }}" placeholder="Comma-separated tag list">
                                        <paper-icon-button icon="remove" on-tap="{{ onRemoveFeed }}"></paper-icon-button>
                                    </div>
                                    </template>
                                    <template if="{{ !wide }}">
                                    <div layout horizontal center>
                                        <img src="http://www.google.com/s2/favicons?domain={{ feed.Link | domain }}" alt="favicon" class="feed-favicon">
                                        <span flex>{{ feed.Title }}</span>
                                    </div>
                                    <div layout horizontal center>
                                        <paper-input-decorator>
                                            <input is="core-input" value="{{ feed.Tags }}" on-change="{{ onFeedTagsChange }}" flex placeholder="Comma-separated tag list">
                                        </paper-input-decorator>
                                        <paper-icon-button icon="remove" on-tap="{{ onRemoveFeed }}"></paper-icon-button>
                                    </div>
                                    </template>
                                </li>
                                </template>
                            </ul>
                        </div>
                    </div>
                </section>

                <section name="share-services" id="share-services" layout vertical center>
                    <div class="container">
                        <div class="card" hero-id="card" hero layout vertical>
                            <ul cross-fade>
                                <template repeat="{{ category in shareServiceList }}">
                                <li>
                                    <h4>{{ category.name }}</h4>
                                    <ul>
                                        <template repeat="{{ service in category.services }}">
                                            <li title="{{ service.title }}" layout horizontal>
                                                <div flex class="share-service-title">
                                                    <template if="{{ service.link }}">
                                                        <a href="{{ service.link }}">{{ service.description }}</a>
                                                    </template>
                                                    <template if="{{ !service.link }}">
                                                        {{ service.title }}
                                                    </template>
                                                </div>
                                                <paper-toggle-button checked?="{{ service.enabled }}" on-change="{{ onShareServiceCheckChange }}" data-service-id="{{ service.id }}"></paper-toggle-button>
                                            </li>
                                        </template>
                                    </ul>
                                </li>
                                </template>
                            </ul>
                        </div>
                    </div>
                </section>

                <template if="{{ user.Admin }}">
                    <section name="admin" layout vertical center>
                        <div class="container">
                            <div class="card" hero-id="card" hero layout vertical>
                                <template if="{{ users.length }}">
                                <ul cross-fade>
                                    <template repeat="{{ user in users }}">
                                    <li title="{{ user.FirstName || user.Login }} {{ user.LastName}}" layout horizontal center>
                                        <paper-checkbox checked="{{ user.Active }}" on-change="{{ onToggleActiveUser}}"></paper-checkbox>
                                        <span flex>{{ user.FirstName || user.Login }} {{ user.LastName }}</span>
                                        <paper-icon-button icon="remove" on-tap="{{ onRemoveUser }}"></paper-icon-button>
                                    </li>
                                    </template>
                                </ul>
                                </template>

                                <template if="{{ !users.length }}">
                                <h3>There are no other users</h3>
                                </template>

                                <paper-button on-tap="{{ onCreateUser }}" self-end>Create user</paper-button>

                            </div>
                        </div>
                    </section>
                </template>

            </core-animated-pages>
        </div>

        <paper-action-dialog id="set-password-dialog" heading="Change your password" transition="paper-dialog-transition-bottom" closeSelector="[dismissive],[affirmative]:not([transient])" on-core-overlay-open="{{ cleanFields }}" on-keypress="{{ onPasswordDialogKeypress }}">
            <small>A successfull change will force a re-log</small>
            <paper-input-decorator label="Current password" floatingLabel>
                <input is="core-input" id="password" type="password" tabindex="4">
            </paper-input-decorator>

            <paper-input-decorator label="New password" floatingLabel>
                <input is="core-input" id="new-password" type="password" tabindex="5">
            </paper-input-decorator>

            <paper-input-decorator label="Confirm new password" floatingLabel>
                <input is="core-input" id="confirm-new-password" type="password" tabindex="6">
            </paper-input-decorator>

            <paper-button affirmative>Cancel</paper-button>
            <paper-button id="apply-password-change" on-tap="{{ onApplyPasswordChange }}" affirmative autofocus transient>Apply</paper-button>
        </paper-action-dialog>

        <paper-action-dialog id="add-user-dialog" heading="Add a new user" transition="paper-dialog-transition-bottom" closeSelector="[dismissive],[affirmative]:not([transient])" on-core-overlay-open="{{ cleanFields }}" on-keypress="{{ onNewUserDialogKeypress }}">
            <paper-input-decorator label="Login" floatingLabel>
                <input is="core-input" id="add-user-login" tabindex="7">
            </paper-input-decorator>

            <paper-input-decorator label="Password" floatingLabel>
                <input is="core-input" id="add-user-password" type="password" tabindex="8">
            </paper-input-decorator>

            <paper-button affirmative>Cancel</paper-button>
            <paper-button id="add-user-apply" on-tap="{{ onApplyCreateUser }}" affirmative autofocus transient>Apply</paper-button>
        </paper-action-dialog>

        <rf-api user="{{ user }}" id="add-feed" method="add-feed" on-rf-api-message="{{ onAddFeedMessage }}"></rf-api>
        <rf-api user="{{ user }}" id="remove-feed" method="remove-feed" on-rf-api-message="{{ onRemoveFeedMessage }}"></rf-api>

        <rf-api user="{{ user }}" id="discover-feeds" method="discover-feeds" on-rf-api-message="{{ onDiscoverFeedsMessage }}" on-rf-api-error="{{ onDiscoverFeedsError }}"></rf-api>
        <rf-api user="{{ user }}" id="parse-opml" method="parse-opml" on-rf-api-message="{{ onDiscoverFeedsMessage }}" on-rf-api-error="{{ onDiscoverFeedsError }}"></rf-api>

        <rf-api user="{{ user }}" id="set-feed-tags" method="set-feed-tags" on-rf-api-message="{{ onSetFeedTagsMessage }}"></rf-api>
        <rf-api id="password-change" method="set-user-attribute" tag="password-change" on-rf-api-message="{{ onPasswordChangeMessage }}" user="{{ user }}"></rf-api>

        <rf-api user="{{ user }}" id="list-users" method="list-users" on-rf-api-message="{{ onListUsersMessage }}"></rf-api>
        <rf-api user="{{ user }}" id="add-user" method="add-user" on-rf-api-message="{{ onAddUserMessage }}"></rf-api>
        <rf-api user="{{ user }}" id="remove-user" method="remove-user" on-rf-api-response="{{ onUserRemoveResponse }}"></rf-api>
        <rf-api user="{{ user }}" id="user-toggle-active" method="set-attribute-for-user" tag="active" on-rf-api-response="{{ onUserToggleActiveResponse }}"></rf-api>
        
    </template>

    <script src="/js/rf-settings.js"></script>
</polymer-element>
{% end %}
